1. 定义输出格式：
   format formatname = 
   line_of_output
   .
==============================================================
2. 格式的使用
   将系统变量$~设成所要使用的格式，调用函数write。
   $~ = "MYFORMAT";
   write;
   format MYFORMAT = 
   =============================================
   Here is the text I want to display.
   =============================================
   .
   如果不用$~指定打印格式，就假定要是用的格式名与要写入的文件变量名相同
   本例中，使用名为STDOUT的打印格式。
========================================================================
3. 输出到其它文件
   （1）write(MYFILE); 但是系统变量$~只对缺省文件变量起作用。这个方法就不能使用
    $~变量来改变所使用的打印格式。
   （2）改变缺省的文件变量，改变$~,再调用write，例如：
        select(MYFILE);
        $~ = "MYFORMAT";
        write;
========================================================================
4. 格式化长字符串
   将开头的@字符换成^。为了避免输出空行，可以在值域格式行首加一个~字符。每输出一次就写一次。有多少行就写多少次。如不确定时可以加~~
==========================================================================
5. 分页
   页眉filename_TOP的格式表示页眉，当前页码存储在$%中
   $^改变定义页眉的打印格式，$=每页的长度
   $-每页要达到结束时剩余的行数
==========================================================================
6. printf函数 
   printf 文件  格式化字符串， 对应变量列表
   
