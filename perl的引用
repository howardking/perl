1. 引用的创建
   用\创建变量
     间打变量的引用：$var=22; ref=\$var;连续引用； $rr=\\$var, 访问时$$$rr
     常量引用：$ref = \3.14;
     数组引用：$ref = \@ARGV;
     散列引用：$ref = \%ENV;
     函数引用：$ref = \&func; 不要(),当\$func()时为引用返回值
     文件名的引用： $ref = \*STDOUT;
     匿名数据的引用：$ref = [1,2['a', 'b']];
     匿名散列的引用：$ref = {'a'=>1, 'b'=>2};
     匿名函数的引用：$ref = sub { print "anonymous func"; }
==============================================================================
2. 引用的使用
   简单变量：$$ref ${$ref}
   数组：@$ref  @{$ref}; 元素：$$ref[0]  $ref->[0] ;
   散列：%$ref  %{$ref}; 元素：$$ref{'a'} $ref->{'a'};
   函数：&$ref(a ,b); $ref->(a, b);
   文件：$ref
==========================================================================
3. ref()与引用的显示
   ref($a):如果$a不是引用为假，是引用为真。值如下：
   SCALAR 简单变量的引用
   ARRAY：数组的引用
   HASH ：散列的引用
   CODE ：代码（函数）的引用
   REF  ：引用
   GLOB ：类型通配

   print $ref;         返回类型+地址 HASH（0X806C52C）
============================================================================
4. 类型通配typeglob
==========================================================================
5. 符号引用
   符号引用保存变量的名称，运行时才知道引用的变量名。
   符号引用不能用于my，my不在符号表中，local在符号表中
=========================================================================
6. 函数模板
   
